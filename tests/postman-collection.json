{
	"info": {
		"_postman_id": "bf62f06a-649b-468f-bbc5-44ddc89ed47e",
		"name": "jsonserver-PW",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44308214",
		"_collection_link": "https://paulokuss.postman.co/workspace/Paulo-Kuss's-Workspace~dec63227-2851-48b2-8ad5-3b910ca65757/collection/44308214-bf62f06a-649b-468f-bbc5-44ddc89ed47e?action=share&source=collection_link&creator=44308214"
	},
	"item": [
		{
			"name": "get alunos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"  const responseData = pm.response.json();",
							"",
							"  pm.expect(responseData).to.be.an('array');",
							"  responseData.forEach(function(item) {",
							"    pm.expect(item).to.have.property('nome');",
							"    pm.expect(item).to.have.property('apelido');",
							"    pm.expect(item).to.have.property('curso');",
							"    pm.expect(item).to.have.property('anoCurricular');",
							"    pm.expect(item).to.have.property('idade');",
							"    pm.expect(item).to.have.property('id');",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Nome and apelido must be non-empty strings\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('array');",
							"  responseData.forEach(function(item) {",
							"    pm.expect(item.nome).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Nome should not be empty\");",
							"    pm.expect(item.apelido).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Apelido should not be empty\");",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"Curso and anoCurricular are non-negative integers\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(item) {",
							"        pm.expect(item.curso).to.be.a('number').and.to.be.at.least(0);",
							"        pm.expect(item.anoCurricular).to.be.a('number').and.to.be.at.least(0);",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Id is a valid format\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  responseData.forEach(function(item) {",
							"    pm.expect(item.id).to.match(/^[0-9a-fA-F]{24}$/);",
							"  });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3030/alunos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"alunos"
					]
				}
			},
			"response": []
		},
		{
			"name": "get cursos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id and nomeDoCurso\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(item) {",
							"        pm.expect(item).to.be.an('object');",
							"        pm.expect(item).to.have.property('id');",
							"        pm.expect(item).to.have.property('nomeDoCurso');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"ID is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  responseData.forEach(function(course) {",
							"    pm.expect(course.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should not be empty\");",
							"  });",
							"});",
							"",
							"",
							"pm.test(\"NomeDoCurso is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function(curso) {",
							"        pm.expect(curso.nomeDoCurso).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3030/cursos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"cursos"
					]
				}
			},
			"response": []
		},
		{
			"name": "get aluno específico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response body has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('nome');",
							"    pm.expect(responseData).to.have.property('apelido');",
							"    pm.expect(responseData).to.have.property('curso');",
							"    pm.expect(responseData).to.have.property('anoCurricular');",
							"    pm.expect(responseData).to.have.property('idade');",
							"    pm.expect(responseData).to.have.property('id');",
							"});",
							"",
							"",
							"pm.test(\"Nome and apelido must be non-empty strings\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.nome).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Nome should not be empty\");",
							"  pm.expect(responseData.apelido).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Apelido should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Curso and anoCurricular are non-negative integers\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.curso).to.exist.and.to.be.a('number').and.to.satisfy((val) => val >= 0, \"Curso must be a non-negative integer\");",
							"    pm.expect(responseData.anoCurricular).to.exist.and.to.be.a('number').and.to.satisfy((val) => val >= 0, \"AnoCurricular must be a non-negative integer\");",
							"});",
							"",
							"",
							"pm.test(\"Id is in a valid format\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.match(/[a-f0-9]{24}/i);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3030/alunos/3058",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"alunos",
						"3058"
					]
				}
			},
			"response": []
		},
		{
			"name": "get curso específico",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id and nomeDoCurso\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('id');",
							"    pm.expect(responseData).to.have.property('nomeDoCurso');",
							"});",
							"",
							"",
							"pm.test(\"Id is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"NomeDoCurso should be a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.nomeDoCurso).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3030/cursos/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"cursos",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "post curso",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.to.have.status(201));",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id and nomeDoCurso\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('id');",
							"    pm.expect(responseData).to.have.property('nomeDoCurso');",
							"});",
							"",
							"",
							"pm.test(\"ID is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should be a non-empty string\");",
							"});",
							"",
							"",
							"pm.test(\"NomeDoCurso is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.nomeDoCurso).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"4\",\r\n    \"nomeDoCurso\": \"Curso de Graduação em Cinema\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3030/cursos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"cursos"
					]
				}
			},
			"response": []
		},
		{
			"name": "post aluno",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.include.all.keys('id', 'nome', 'apelido', 'curso', 'anoCurricular', 'idade');",
							"});",
							"",
							"",
							"pm.test(\"Id should be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Curso and anoCurricular are non-negative integers\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.curso).to.be.a('number').and.to.satisfy(val => val >= 0, \"Curso must be a non-negative integer\");",
							"    pm.expect(responseData.anoCurricular).to.be.a('number').and.to.satisfy(val => val >= 0, \"AnoCurricular must be a non-negative integer\");",
							"});",
							"",
							"",
							"pm.test(\"Content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nome\": \"Isadora\",\r\n    \"apelido\": \"Burigo\",\r\n    \"curso\": 4,\r\n    \"anoCurricular\": 1,\r\n    \"idade\": 17\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3030/alunos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"alunos"
					]
				}
			},
			"response": []
		},
		{
			"name": "post curso errado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id and nomeDoCurso\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('id');",
							"    pm.expect(responseData).to.have.property('nomeDoCurso');",
							"});",
							"",
							"",
							"pm.test(\"Id is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.id).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");",
							"});",
							"",
							"",
							"pm.test(\"NomeDoCurso is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.nomeDoCurso).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"42\",\r\n    \"nomeDoCurso\": \"Curso Propositalmente Incorreto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3030/cursos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"cursos"
					]
				}
			},
			"response": []
		},
		{
			"name": "post aluno errado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.exist;",
							"    pm.expect(responseData.nome).to.exist;",
							"    pm.expect(responseData.apelido).to.exist;",
							"    pm.expect(responseData.curso).to.exist;",
							"    pm.expect(responseData.anoCurricular).to.exist;",
							"    pm.expect(responseData.idade).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Id should be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Curso and anoCurricular are non-negative integers\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.curso).to.be.a('number').and.to.satisfy((value) => value >= 0, \"Curso should be a non-negative integer\");",
							"  pm.expect(responseData.anoCurricular).to.be.a('number').and.to.satisfy((value) => value >= 0, \"AnoCurricular should be a non-negative integer\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nome\": \"Bilubilu\",\r\n    \"apelido\": \"Tetéia\",\r\n    \"curso\": 42,\r\n    \"anoCurricular\": 10,\r\n    \"idade\": 96,\r\n    \"id\": \"d3l3t3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3030/alunos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"alunos"
					]
				}
			},
			"response": []
		},
		{
			"name": "del curso errado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id and nomeDoCurso\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.include.all.keys('id', 'nomeDoCurso');",
							"});",
							"",
							"",
							"pm.test(\"Id is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"NomeDoCurso is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.nomeDoCurso).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3030/cursos/42",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"cursos",
						"42"
					]
				}
			},
			"response": []
		},
		{
			"name": "del aluno errado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.include.all.keys(\"id\", \"nome\", \"apelido\", \"curso\", \"anoCurricular\", \"idade\");",
							"});",
							"",
							"",
							"pm.test(\"Id must be a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Curso and anoCurricular are non-negative integers\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.curso).to.be.a('number').and.to.satisfy((value) => value >= 0, \"Curso should be a non-negative integer\");",
							"    pm.expect(responseData.anoCurricular).to.be.a('number').and.to.satisfy((value) => value >= 0, \"AnoCurricular should be a non-negative integer\");",
							"});",
							"",
							"",
							"pm.test(\"Verify Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3030/alunos/d3l3t3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"alunos",
						"d3l3t3"
					]
				}
			},
			"response": []
		}
	]
}